<?php

/**
 * TextTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TextTable extends Doctrine_Table {
    
    /**
     * Returns an instance of this class.
     *
     * @return object TextTable
     */
    public static function getInstance() 
    {
        return Doctrine_Core::getTable('Text');
    }

    /**
     * Devuelve todas las traducciones
     * 
     * @return array
     */
    public function getTranslations() 
    {
        $q = Doctrine::getTable('Text')
                ->createQuery('txt')
                ->leftJoin('txt.Translation t')
                ->orderBy('t.idtext DESC');
        return $q->fetchArray();
    }
    
    /**
     * Busca una traducción
     * 
     * @param string $text
     * @param integer $idProj
     * @return array
     */
    public static function getSearch($text, $idProj) 
    {
        // Preconsulta en el caso de que se esté realizando búsqueda por texto
        // obtendrá ids a mostrar
        if (!empty($text)) {
            $q = Doctrine::getTable('Text')
                    ->createQuery('txt')
                    ->innerJoin('txt.Translation t')
                    ->where('txt.idproject = ?', $idProj);
            if (!empty($text)) {
                $q->andWhere('t.paragraph LIKE ?', '%' . $text . '%');
            }
            $ids = array();
            foreach ($q->execute() as $item) {
              $ids[] = $item->idtext;
            }
            
            // Si no hay coincidencias devolvemos lista vacía
            if (empty($ids)) return array();
        }

        $q = Doctrine::getTable('Text')
                ->createQuery('txt')
                ->innerJoin('txt.Translation t')
                ->where('txt.idproject = ?', $idProj);
        
        // Caso búsqueda por texto
        if (!empty($text)) {
            $q->andWhereIn('t.idtext', $ids);
        }
        $q->orderBy('txt.idtext DESC');
        return $q->fetchArray();
    }

}
        